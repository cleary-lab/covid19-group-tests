scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
library(ggthemes)
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=1) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
library(ggsci)
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=1) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
??theme_pubr
library(ggpubr)
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=1) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
p2 <- ggplot(chains_comb) +
geom_density(aes(x=value,fill=as.factor(chain)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=1) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
p1
library(patchwork)
chains_comb <- do.call("rbind",chains_tmp)
chains_comb <- reshape2::melt(chains_comb, id.vars=c("sampno","chain"))
use_pars <- c("sd","viral_peak_mean","wane_mean","wane_sd","rho_viral_wane",
"viral_peak", "t_wane","desired_mode","tshift")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(alpha)","wane_mean"="bar(t_w)","wane_sd"="sigma^{t_w}","rho_viral_wane"="rho",
"viral_peak"="alpha", "t_wane"="t_w","desired_mode"="t_p","tshift"="t_g")
chains_comb <- chains_comb %>% filter(variable %in% use_pars)
chains_comb$variable <- par_key[chains_comb$variable]
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=1) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
p2 <- ggplot(chains_comb) +
geom_density(aes(x=value,fill=as.factor(chain)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=1) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
library(patchwork)
p1 | p2
chains_comb <- do.call("rbind",chains_tmp)
chains_comb <- reshape2::melt(chains_comb, id.vars=c("sampno","chain"))
head(chains_comb)
class(chains_comb$variable)
chains_comb$variable <- as.character(chains_comb$variable)
use_pars <- c("sd","viral_peak_mean","viral_peak_sd","wane_mean","wane_sd","rho_viral_wane",
"viral_peak", "t_wane","desired_mode","tshift")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(alpha)","viral_peak_sd"="sigma^alpha","wane_mean"="bar(t_w)","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho",
"viral_peak"="alpha", "t_wane"="t_w","desired_mode"="t_p","tshift"="t_g")
chains_comb <- chains_comb %>% filter(variable %in% use_pars)
chains_comb$variable <- par_key[chains_comb$variable]
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=1) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
p2 <- ggplot(chains_comb) +
geom_density(aes(x=value,fill=as.factor(chain)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=1) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
p1 | p2
head(chains_comb)
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
gelman.diag(chains_sputum[[1]])
###################################
## SPUTUM
###################################
chains_sputum <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_sputum/"),
parTab, TRUE, 100, burnin=1000000,multi=TRUE,chainNo = FALSE)
gelman.diag(chains_sputum[[1]])
effectiveSize(chains_sputum[[1]])
###################################
## COMBINED
###################################
chains_comb_all <- bind_rows(chains_comb, chains_comb_sputum)
p5 <- ggplot(chains_comb_all) +
geom_density(aes(x=value,fill=as.factor(Data)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=1) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
p5
p5 <- ggplot(chains_comb_all) +
geom_density(aes(x=value,fill=as.factor(Data)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8))
p5
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
p5
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
p5
p1 | p2
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
getwd()
pdf("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/figs/convergence_swab.pdf",height=8,width=8)
p1 | p2
dev.off()
pdf("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/figs/convergence_sputum.pdf",height=8,width=8)
p3 | p4
dev.off()
pdf("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/figs/densities_all.pdf",height=8,width=8)
p5
dev.off()
p5 <- ggplot(chains_comb_all) +
geom_density(aes(x=value,fill=as.factor(Data)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=3) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(text=element_text(family="sans",size=8))
pdf("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/figs/densities_all.pdf",height=8,width=8)
p5
dev.off()
p5 <- ggplot(chains_comb_all) +
geom_density(aes(x=value,fill=Data),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=3) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(text=element_text(family="sans",size=8))
pdf("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/figs/densities_all.pdf",height=8,width=8)
p5
dev.off()
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
chains_comb <- do.call("rbind",chains_tmp)
head(chains_comb)
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2)
rho_viral_wane <- 0.5
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2)
for(i in 1:nrow(chains_comb)){
viral_peak_mean <- chains_comb$viral_peak_mean[i]
wane_mean <- chains_comb$wane_mean[i]
viral_peak_sd <- chains_comb$viral_peak_sd[i]
wane_sd <- chains_comb$wane_sd[i]
rho_viral_wane <- chains_comb$rho_viral_wane[i]
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
}
library(rethinking)
for(i in 1:nrow(chains_comb)){
viral_peak_mean <- chains_comb$viral_peak_mean[i]
wane_mean <- chains_comb$wane_mean[i]
viral_peak_sd <- chains_comb$viral_peak_sd[i]
wane_sd <- chains_comb$wane_sd[i]
rho_viral_wane <- chains_comb$rho_viral_wane[i]
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
}
colnames(chains_comb)
chains_comb <- do.call("rbind",chains_tmp)
colnames(chains_comb)
chains_swab_list <- chains_swab[[1]]
#mcmc_trace(chains_swab_list)
c#hains_swab_list <- lapply(chains_swab_list, function(x) x[,c("chain","sd", "viral_peak_mean", "viral_peak_sd", "wane_mean", "wane_sd",
chains_swab_list <- chains_swab[[1]]
chains_tmp <- lapply(chains_swab_list, function(x){
tmp <- as.data.frame(x)
tmp$sampno <- 1:nrow(tmp)
tmp
})
chains_comb <- do.call("rbind",chains_tmp)
colnames(chains_comb)
library(data.table)
incu_cols <- colnames(chains_comb) %like% "viral_peak"
incu_cols
incu_cols <- which(colnames(chains_comb) %like% "incu")
tshift_cols <- which(colnames(chains_comb) %like% "tshift")
desired_mode_cols <- which(colnames(chains_comb) %like% "desired_mode")
incu_cols
incu_samp[i] <- chains_comb[i,incu_cols[choose_indiv]]
choose_indiv <- sample(seq_len(9),1)
incu_samp[i] <- chains_comb[i,incu_cols[choose_indiv]]
chains_comb[i,incu_cols[choose_indiv]]
chains_swab_list <- chains_swab[[1]]
#mcmc_trace(chains_swab_list)
#chains_swab_list <- lapply(chains_swab_list, function(x) x[,c("chain","sd", "viral_peak_mean", "viral_peak_sd", "wane_mean", "wane_sd",
#                                          "rho_viral_wane", "viral_peak", "t_wane", "desired_mode", "tshift","incu")])
chains_tmp <- lapply(chains_swab_list, function(x){
tmp <- as.data.frame(x)
tmp$sampno <- 1:nrow(tmp)
tmp
})
chains_comb <- do.call("rbind",chains_tmp)
viral_peaks_samp <- numeric(nrow(chains_comb))
wane_samp <- numeric(nrow(chains_comb))
incu_samp <- numeric(nrow(chains_comb))
tshift <- numeric(nrow(chains_comb))
desired_mode <- numeric(nrow(chains_comb))
incu_cols <- which(colnames(chains_comb) %like% "incu")
tshift_cols <- which(colnames(chains_comb) %like% "tshift")
desired_mode_cols <- which(colnames(chains_comb) %like% "desired_mode")
for(i in 1:nrow(chains_comb)){
choose_indiv <- sample(seq_len(9),1)
viral_peak_mean <- chains_comb$viral_peak_mean[i]
wane_mean <- chains_comb$wane_mean[i]
viral_peak_sd <- chains_comb$viral_peak_sd[i]
wane_sd <- chains_comb$wane_sd[i]
rho_viral_wane <- chains_comb$rho_viral_wane[i]
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
viral_peaks_samp[i] <- tmp[1,1]
wane_samp[i] <- tmp[1,2]
incu_samp[i] <- chains_comb[i,incu_cols[choose_indiv]]
tshift[i] <- chains_comb[i,tshift_cols[choose_indiv]]
desired_mode[i] <- chains_comb[i,desired_mode_cols[choose_indiv]]
}
hist(desired_mode)
chains_comb <- cbind(chains_comb, viral_peaks_samp, wane_samp, incu_samp, tshift, desired_mode)
chains_comb %>% head
chains_swab <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_swab/"),
parTab, TRUE, 100, burnin=1000000,multi=TRUE,chainNo = FALSE)
gelman.diag(chains_swab[[1]])
effectiveSize(chains_swab[[1]])
chains_swab <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_swab/"),
parTab, TRUE, 100, burnin=1000000,multi=TRUE,chainNo = TRUE)
chains_swab_list <- chains_swab[[1]]
#mcmc_trace(chains_swab_list)
#chains_swab_list <- lapply(chains_swab_list, function(x) x[,c("chain","sd", "viral_peak_mean", "viral_peak_sd", "wane_mean", "wane_sd",
#                                          "rho_viral_wane", "viral_peak", "t_wane", "desired_mode", "tshift","incu")])
chains_tmp <- lapply(chains_swab_list, function(x){
tmp <- as.data.frame(x)
tmp$sampno <- 1:nrow(tmp)
tmp
})
chains_comb <- do.call("rbind",chains_tmp)
viral_peaks_samp <- numeric(nrow(chains_comb))
wane_samp <- numeric(nrow(chains_comb))
incu_samp <- numeric(nrow(chains_comb))
tshift_samp <- numeric(nrow(chains_comb))
desired_mode_samp <- numeric(nrow(chains_comb))
incu_cols <- which(colnames(chains_comb) %like% "incu")
tshift_cols <- which(colnames(chains_comb) %like% "tshift")
desired_mode_cols <- which(colnames(chains_comb) %like% "desired_mode")
for(i in 1:nrow(chains_comb)){
choose_indiv <- sample(seq_len(9),1)
viral_peak_mean <- chains_comb$viral_peak_mean[i]
wane_mean <- chains_comb$wane_mean[i]
viral_peak_sd <- chains_comb$viral_peak_sd[i]
wane_sd <- chains_comb$wane_sd[i]
rho_viral_wane <- chains_comb$rho_viral_wane[i]
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
viral_peaks_samp[i] <- tmp[1,1]
wane_samp[i] <- tmp[1,2]
incu_samp[i] <- chains_comb[i,incu_cols[choose_indiv]]
tshift_samp[i] <- chains_comb[i,tshift_cols[choose_indiv]]
desired_mode_samp[i] <- chains_comb[i,desired_mode_cols[choose_indiv]]
}
chains_comb <- cbind(chains_comb, viral_peaks_samp, wane_samp, incu_samp, tshift_samp, desired_mode_samp)
use_pars <- c("sd","viral_peak_mean","viral_peak_sd","wane_mean","wane_sd","rho_viral_wane",
"viral_peak_samp", "wane_samp","desired_mode_samp","tshift_samp","incu_samp")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(alpha)","viral_peak_sd"="sigma^alpha","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="alpha", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(vl)","viral_peak_sd"="sigma^vl","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="vl", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
chains_comb <- chains_comb %>% filter(variable %in% use_pars)
chains_comb$variable <- par_key[chains_comb$variable]
chains_comb$Data <- "Swab"
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=2) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
p2 <- ggplot(chains_comb) +
geom_density(aes(x=value,fill=as.factor(chain)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=2) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
chains_comb
chains_swab_list <- chains_swab[[1]]
#mcmc_trace(chains_swab_list)
#chains_swab_list <- lapply(chains_swab_list, function(x) x[,c("chain","sd", "viral_peak_mean", "viral_peak_sd", "wane_mean", "wane_sd",
#                                          "rho_viral_wane", "viral_peak", "t_wane", "desired_mode", "tshift","incu")])
chains_tmp <- lapply(chains_swab_list, function(x){
tmp <- as.data.frame(x)
tmp$sampno <- 1:nrow(tmp)
tmp
})
chains_comb <- do.call("rbind",chains_tmp)
viral_peaks_samp <- numeric(nrow(chains_comb))
wane_samp <- numeric(nrow(chains_comb))
incu_samp <- numeric(nrow(chains_comb))
tshift_samp <- numeric(nrow(chains_comb))
desired_mode_samp <- numeric(nrow(chains_comb))
incu_cols <- which(colnames(chains_comb) %like% "incu")
tshift_cols <- which(colnames(chains_comb) %like% "tshift")
desired_mode_cols <- which(colnames(chains_comb) %like% "desired_mode")
for(i in 1:nrow(chains_comb)){
choose_indiv <- sample(seq_len(9),1)
viral_peak_mean <- chains_comb$viral_peak_mean[i]
wane_mean <- chains_comb$wane_mean[i]
viral_peak_sd <- chains_comb$viral_peak_sd[i]
wane_sd <- chains_comb$wane_sd[i]
rho_viral_wane <- chains_comb$rho_viral_wane[i]
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
viral_peaks_samp[i] <- tmp[1,1]
wane_samp[i] <- tmp[1,2]
incu_samp[i] <- chains_comb[i,incu_cols[choose_indiv]]
tshift_samp[i] <- chains_comb[i,tshift_cols[choose_indiv]]
desired_mode_samp[i] <- chains_comb[i,desired_mode_cols[choose_indiv]]
}
chains_comb <- cbind(chains_comb, viral_peaks_samp, wane_samp, incu_samp, tshift_samp, desired_mode_samp)
chains_comb <- reshape2::melt(chains_comb, id.vars=c("sampno","chain"))
chains_comb$variable <- as.character(chains_comb$variable)
use_pars <- c("sd","viral_peak_mean","viral_peak_sd","wane_mean","wane_sd","rho_viral_wane",
"viral_peak_samp", "wane_samp","desired_mode_samp","tshift_samp","incu_samp")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(alpha)","viral_peak_sd"="sigma^alpha","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="alpha", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(vl)","viral_peak_sd"="sigma^vl","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="vl", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
chains_comb <- chains_comb %>% filter(variable %in% use_pars)
chains_comb$variable <- par_key[chains_comb$variable]
chains_comb$Data <- "Swab"
p1 <- ggplot(chains_comb) +
geom_line(aes(x=sampno,y=value,col=as.factor(chain))) +
facet_wrap(~variable,scales="free_y",labeller=label_parsed,ncol=2) +
scale_color_viridis_d() +
xlab("Iteration") +
ylab("Value") +
theme_pubr()+
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="A")
p2 <- ggplot(chains_comb) +
geom_density(aes(x=value,fill=as.factor(chain)),alpha=0.5) +
facet_wrap(~variable,scales="free",labeller=label_parsed,ncol=2) +
scale_fill_viridis_d() +
xlab("Value") +
ylab("Density") +
theme_pubr() +
theme(legend.position="none",
text=element_text(family="sans",size=8)) +
labs(tag="B")
p1 | p2
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
p5
p3
p4
p5
p4
viral_peaks_samp
hist(viral_peaks_samp)
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
p5
p1
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(alpha)","viral_peak_sd"="sigma^alpha","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="vl", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(vl)","viral_peak_sd"="sigma^vl","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="vl", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
library(coda)
library(bayesplot)
library(tidyverse)
library(ggplot2)
library(lazymcmc)
library(ggpubr)
library(patchwork)
library(rethinking)
library(data.table)
parTab <- read.csv("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/pars/partab_multivariate_hinge.csv",stringsAsFactors=FALSE)
###################################
## SWAB
###################################
chains_swab <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_swab/"),
parTab, TRUE, 100, burnin=1000000,multi=TRUE,chainNo = FALSE)
gelman.diag(chains_swab[[1]])
effectiveSize(chains_swab[[1]])
chains_swab <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_swab/"),
parTab, TRUE, 100, burnin=1000000,multi=TRUE,chainNo = TRUE)
chains_swab_list <- chains_swab[[1]]
#mcmc_trace(chains_swab_list)
#chains_swab_list <- lapply(chains_swab_list, function(x) x[,c("chain","sd", "viral_peak_mean", "viral_peak_sd", "wane_mean", "wane_sd",
#                                          "rho_viral_wane", "viral_peak", "t_wane", "desired_mode", "tshift","incu")])
chains_tmp <- lapply(chains_swab_list, function(x){
tmp <- as.data.frame(x)
tmp$sampno <- 1:nrow(tmp)
tmp
})
chains_comb <- do.call("rbind",chains_tmp)
viral_peaks_samp <- numeric(nrow(chains_comb))
wane_samp <- numeric(nrow(chains_comb))
incu_samp <- numeric(nrow(chains_comb))
tshift_samp <- numeric(nrow(chains_comb))
desired_mode_samp <- numeric(nrow(chains_comb))
incu_cols <- which(colnames(chains_comb) %like% "incu")
tshift_cols <- which(colnames(chains_comb) %like% "tshift")
desired_mode_cols <- which(colnames(chains_comb) %like% "desired_mode")
for(i in 1:nrow(chains_comb)){
choose_indiv <- sample(seq_len(9),1)
viral_peak_mean <- chains_comb$viral_peak_mean[i]
wane_mean <- chains_comb$wane_mean[i]
viral_peak_sd <- chains_comb$viral_peak_sd[i]
wane_sd <- chains_comb$wane_sd[i]
rho_viral_wane <- chains_comb$rho_viral_wane[i]
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
viral_peaks_samp[i] <- tmp[1,1]
wane_samp[i] <- tmp[1,2]
while(tmp[1,2] < 0){
tmp <- rmvnorm2(1, c(viral_peak_mean,wane_mean),c(viral_peak_sd,wane_sd),
matrix(c(1,rho_viral_wane,rho_viral_wane,1),ncol=2))
viral_peaks_samp[i] <- tmp[1,1]
wane_samp[i] <- tmp[1,2]
}
incu_samp[i] <- chains_comb[i,incu_cols[choose_indiv]]
tshift_samp[i] <- chains_comb[i,tshift_cols[choose_indiv]]
desired_mode_samp[i] <- chains_comb[i,desired_mode_cols[choose_indiv]]
}
chains_comb <- cbind(chains_comb, viral_peaks_samp, wane_samp, incu_samp, tshift_samp, desired_mode_samp)
chains_comb <- reshape2::melt(chains_comb, id.vars=c("sampno","chain"))
chains_comb$variable <- as.character(chains_comb$variable)
use_pars <- c("sd","viral_peak_mean","viral_peak_sd","wane_mean","wane_sd","rho_viral_wane",
"viral_peak_samp", "wane_samp","desired_mode_samp","tshift_samp","incu_samp")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(alpha)","viral_peak_sd"="sigma^alpha","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="alpha", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
par_key <- c("sd"="sigma", "viral_peak_mean"="bar(vl)","viral_peak_sd"="sigma^vl","wane_mean"="bar(t[w])","wane_sd"="sigma^{t_w}",
"rho_viral_wane"="rho","incu_samp"="t[inc]",
"viral_peak_samp"="vl", "wane_samp"="t[w]","desired_mode_samp"="t[p]","tshift_samp"="t[g]")
unique(chains_comb$variable)
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/posterior_checks.R', echo=TRUE)
p5
setwd("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/sims/")
library(tidyverse)
dat <- read_csv("seir_viral_loads_swab.csv")
head(dat)
ggplot(dat) + geom_raster(aes(x=t,y=i,fill=vl))
dat <- dat %>% arrange(i, t)
View(dat)
range(dat$t)
