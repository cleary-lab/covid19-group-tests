## Generate pools and see if pool tests positive
tmp_pool <- tmp_sample %>%
group_by(t, pool) %>%
summarize(pool_vl_tot = sum(pool_vl), .groups="keep") %>%
mutate(pool_is_pos = pool_vl_tot> 100) %>%
mutate(n_tests = 1 + as.numeric(pool_is_pos)*b)
tmp_res <- tmp_sample %>% left_join(tmp_pool, by=c("t","pool")) %>%
mutate(found = is_pos & pool_is_pos)
total_tests <- tmp_pool %>%
group_by(t) %>%
summarize(n_tests_tot = sum(n_tests),.groups="keep") %>%
mutate(run=run, b=b)
all_tests[[run]] <- total_tests
all_res[[run]] <- tmp_res
}
all_tests_comb <- do.call("bind_rows", all_tests)
all_res_comb <- do.call("bind_rows", all_res)
list(all_tests_comb, all_res_comb)
}
all_tests_res <- lapply(res, function(x) x[[1]])
all_tests_res <- do.call("bind_rows", all_tests_res)
p1 <- all_tests_res %>% group_by(t, b) %>%
summarize(mean_tests=mean(n_tests_tot)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_line(aes(x=prev,y=mean_tests, col=as.factor(b))) +
geom_hline(yintercept=30) +
facet_wrap(~growth, ncol=1)
all_res_res <- lapply(res, function(x) x[[2]])
all_res_res <- do.call("bind_rows", all_res_res)
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_line(aes(x=prev,y=sensitivity, col=as.factor(b))) +
facet_wrap(~growth, ncol=1)
p1 | p2
all_res <- NULL
all_tests <- NULL
for(run in 1:100) {
## Subset individuals to sample and find if actually positive
tmp_sample <- viral_loads %>%
group_by(t) %>%
sample_n(30) %>%
mutate(pool_id = 1:n()) %>%
mutate(pool = ceiling(pool_id/b)) %>%
mutate(vl = 10^log_vl - 1) %>%
mutate(pool_vl = rpois(n(), vl/b)) %>%
mutate(is_pos = log_vl >= 2,
is_true_pos = log_vl > 0,
b=b,
run=run)
## Generate pools and see if pool tests positive
tmp_pool <- tmp_sample %>%
group_by(t, pool) %>%
summarize(pool_vl_tot = sum(pool_vl), .groups="keep") %>%
mutate(pool_is_pos = pool_vl_tot> 100) %>%
mutate(n_tests = 1 + as.numeric(pool_is_pos)*b)
tmp_res <- tmp_sample %>% left_join(tmp_pool, by=c("t","pool")) %>%
mutate(found = is_pos & pool_is_pos)
total_tests <- tmp_pool %>%
group_by(t) %>%
summarize(n_tests_tot = sum(n_tests),.groups="keep") %>%
mutate(run=run, b=b)
all_tests[[run]] <- total_tests
all_res[[run]] <- tmp_res
}
## Subset individuals to sample and find if actually positive
tmp_sample <- viral_loads %>%
group_by(t) %>%
sample_n(30) %>%
mutate(pool_id = 1:n()) %>%
mutate(pool = ceiling(pool_id/b)) %>%
mutate(vl = 10^log_vl - 1) %>%
mutate(pool_vl = rpois(n(), vl/b)) %>%
mutate(is_pos = log_vl >= 2,
is_true_pos = log_vl > 0,
b=b,
run=run)
viral_loads <- simulated_data$viral_loads %>% as_tibble
colnames(viral_loads) <- times
viral_prev <- apply(viral_loads[,1:ncol(viral_loads)], 2, function(x) length(x[x > 2])/length(x))
pA_dat2 <- data.frame(prev=viral_prev,t=unique(epidemic_process$seir_outputs$time))
pA_dat2 <- pA_dat2 %>% mutate(growth=ifelse(t < pA_dat2 %>% filter(prev == max(prev)) %>% pull(t), "Growth","Decline"))
viral_loads <- viral_loads %>% mutate(i = 1:n()) %>% pivot_longer(-i)
viral_loads <- viral_loads %>% mutate(name = as.numeric(name))
viral_loads <- viral_loads %>% rename(t=name,log_vl=value)
## For each t
## Number of repeats
n_clusters <- 5
cl <- makeCluster(n_clusters,setup_strategy = "sequential")
registerDoParallel(cl)
res <- foreach(b=c(30, 15, 10, 5, 3),.packages = c("tidyverse")) %dopar% {
all_res <- NULL
all_tests <- NULL
for(run in 1:100) {
## Subset individuals to sample and find if actually positive
tmp_sample <- viral_loads %>%
group_by(t) %>%
sample_n(30) %>%
mutate(pool_id = 1:n()) %>%
mutate(pool = ceiling(pool_id/b)) %>%
mutate(vl = 10^log_vl - 1) %>%
mutate(pool_vl = rpois(n(), vl/b)) %>%
mutate(is_pos = log_vl >= 2,
is_true_pos = log_vl > 0,
b=b,
run=run)
## Generate pools and see if pool tests positive
tmp_pool <- tmp_sample %>%
group_by(t, pool) %>%
summarize(pool_vl_tot = sum(pool_vl), .groups="keep") %>%
mutate(pool_is_pos = pool_vl_tot> 100) %>%
mutate(n_tests = 1 + as.numeric(pool_is_pos)*b)
tmp_res <- tmp_sample %>% left_join(tmp_pool, by=c("t","pool")) %>%
mutate(found = is_pos & pool_is_pos)
total_tests <- tmp_pool %>%
group_by(t) %>%
summarize(n_tests_tot = sum(n_tests),.groups="keep") %>%
mutate(run=run, b=b)
all_tests[[run]] <- total_tests
all_res[[run]] <- tmp_res
}
all_tests_comb <- do.call("bind_rows", all_tests)
all_res_comb <- do.call("bind_rows", all_res)
list(all_tests_comb, all_res_comb)
}
all_tests_res <- lapply(res, function(x) x[[1]])
all_tests_res <- do.call("bind_rows", all_tests_res)
p1 <- all_tests_res %>% group_by(t, b) %>%
summarize(mean_tests=mean(n_tests_tot)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_line(aes(x=prev,y=mean_tests, col=as.factor(b))) +
geom_hline(yintercept=30) +
facet_wrap(~growth, ncol=1)
all_res_res <- lapply(res, function(x) x[[2]])
all_res_res <- do.call("bind_rows", all_res_res)
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_line(aes(x=prev,y=sensitivity, col=as.factor(b))) +
facet_wrap(~growth, ncol=1)
p1 | p2
p1 <- all_tests_res %>% group_by(t, b) %>%
summarize(mean_tests=mean(n_tests_tot)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=mean_tests, col=as.factor(b)),size=0.01) +
geom_hline(yintercept=30) +
facet_wrap(~growth, ncol=1) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Number of tests used") +
xlab("Prevalence")
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=sensitivity, col=as.factor(b)),size=0.05) +
facet_wrap(~growth, ncol=1) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity relative to individual testing")+
xlab("Prevalence")
p1 | p2
p1 <- all_tests_res %>% group_by(t, b) %>%
summarize(mean_tests=mean(n_tests_tot)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=mean_tests, col=as.factor(b)),size=0.01) +
geom_smooth(aes(x=prev,y=mean_tests, col=as.factor(b)),se=FALSE) +
geom_hline(yintercept=30) +
facet_wrap(~growth, ncol=1) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Number of tests used") +
xlab("Prevalence")
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=sensitivity, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=sensitivity, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity relative to individual testing")+
xlab("Prevalence")
p1 | p2
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=sensitivity, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=sensitivity, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity")+
xlab("Prevalence")
p1 | p2
source('~/Documents/GitHub/covid19-group-tests/madrid/for_carlos.R', echo=TRUE)
all_res_res$run
unique(all_res_res$run)
main_p <- p1 | p2
ggsave("~/Documents/GitHub/covid19-group-tests/madrid/compare_pools.png",width=7,height=5)
main_p
all_res_res
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=sensitivity, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=sensitivity, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity")+
xlab("Prevalence")
main_p <- p1 | p2
main_p
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=sensitivity, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=sensitivity, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity")+
xlab("Prevalence")
main_p <- p1 | p2
ggsave("~/Documents/GitHub/covid19-group-tests/madrid/compare_pools.png",width=7,height=5)
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=mean(log_vl)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
#scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity")+
xlab("Prevalence")
p3
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=mean(log_vl)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
#scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Mean viral load")+
xlab("Prevalence")
main_p <- p1 | p2  | p3
main_p
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=mean(log_vl),
lower=quantile(log_vl, 0.025),
upper=quantile(log_vl, 0.975)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
geom_smooth(aes(x=prev,y=lower, col=as.factor(b)),se=FALSE,linetype="dashed") +
geom_smooth(aes(x=prev,y=upper, col=as.factor(b)),se=FALSE,linetype="dashed") +
facet_wrap(~growth, ncol=1) +
#scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Mean viral load")+
xlab("Prevalence")
p3
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=mean(log_vl),
lower=quantile(log_vl, 0.025),
upper=quantile(log_vl, 0.975)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
geom_smooth(aes(x=prev,y=lower, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
geom_smooth(aes(x=prev,y=upper, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0,10)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Mean viral load")+
xlab("Prevalence")
p3
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=mean(log_vl),
lower=quantile(log_vl, 0.025),
upper=quantile(log_vl, 0.975)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
geom_smooth(aes(x=prev,y=lower, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
geom_smooth(aes(x=prev,y=upper, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0,10),breaks=seq(0,10,by=1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Mean viral load")+
xlab("Prevalence")
p3
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=median(log_vl),
lower=quantile(log_vl, 0.025),
upper=quantile(log_vl, 0.975)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
geom_smooth(aes(x=prev,y=lower, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
geom_smooth(aes(x=prev,y=upper, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0,10),breaks=seq(0,10,by=1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Mean viral load")+
xlab("Prevalence")
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=median(log_vl),
lower=quantile(log_vl, 0.025),
upper=quantile(log_vl, 0.975)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
geom_smooth(aes(x=prev,y=lower, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
geom_smooth(aes(x=prev,y=upper, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0,10),breaks=seq(0,10,by=1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Viral load (median and 95% quantiles)")+
xlab("Prevalence")
p3
main_p <- p1 | p2  | p3
main_p
ggsave("~/Documents/GitHub/covid19-group-tests/madrid/compare_pools.png",width=8,height=5)
main_p <- (p1 | p2  | p3) + ggtitle("Evaluation of pool sizes when testing cohorts of N=30")
main_p
ggsave("~/Documents/GitHub/covid19-group-tests/madrid/compare_pools_nonoise_sputum.png",width=8,height=5)
simulated_data$obs
viral_loads <- simulated_data$obs %>% as_tibble
colnames(viral_loads) <- times
viral_prev <- apply(viral_loads[,1:ncol(viral_loads)], 2, function(x) length(x[x > 2])/length(x))
pA_dat2 <- data.frame(prev=viral_prev,t=unique(epidemic_process$seir_outputs$time))
pA_dat2 <- pA_dat2 %>% mutate(growth=ifelse(t < pA_dat2 %>% filter(prev == max(prev)) %>% pull(t),
"Epidemic growth","Epidemic decline"))
viral_loads <- viral_loads %>% mutate(i = 1:n()) %>% pivot_longer(-i)
viral_loads <- viral_loads %>% mutate(name = as.numeric(name))
viral_loads <- viral_loads %>% rename(t=name,log_vl=value)
## For each t
## Number of repeats
res <- foreach(b=c(30, 15, 10, 5, 3,1),.packages = c("tidyverse")) %dopar% {
all_res <- NULL
all_tests <- NULL
for(run in 1:n_samps) {
## Subset individuals to sample and find if actually positive
tmp_sample <- viral_loads %>%
group_by(t) %>%
sample_n(30) %>%
mutate(pool_id = 1:n()) %>%
mutate(pool = ceiling(pool_id/b)) %>%
mutate(vl = 10^log_vl - 1) %>%
mutate(pool_vl = rpois(n(), vl/b)) %>%
mutate(is_pos = log_vl >= 2,
is_true_pos = log_vl > 0,
b=b,
run=run)
## Generate pools and see if pool tests positive
tmp_pool <- tmp_sample %>%
group_by(t, pool) %>%
summarize(pool_vl_tot = sum(pool_vl), .groups="keep") %>%
mutate(pool_is_pos = pool_vl_tot> 100) %>%
mutate(n_tests = 1 + as.numeric(pool_is_pos)*b)
tmp_res <- tmp_sample %>% left_join(tmp_pool, by=c("t","pool")) %>%
mutate(found = is_pos & pool_is_pos)
total_tests <- tmp_pool %>%
group_by(t) %>%
summarize(n_tests_tot = sum(n_tests),.groups="keep") %>%
mutate(run=run, b=b)
all_tests[[run]] <- total_tests
all_res[[run]] <- tmp_res
}
all_tests_comb <- do.call("bind_rows", all_tests)
all_res_comb <- do.call("bind_rows", all_res)
list(all_tests_comb, all_res_comb)
}
all_tests_res <- lapply(res, function(x) x[[1]])
all_tests_res <- do.call("bind_rows", all_tests_res)
p1 <- all_tests_res %>% group_by(t, b) %>%
summarize(mean_tests=mean(n_tests_tot)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=mean_tests, col=as.factor(b)),size=0.01) +
geom_smooth(aes(x=prev,y=mean_tests, col=as.factor(b)),se=FALSE) +
geom_hline(yintercept=30) +
facet_wrap(~growth, ncol=1) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Number of tests used") +
xlab("Prevalence")
all_res_res <- lapply(res, function(x) x[[2]])
all_res_res <- do.call("bind_rows", all_res_res)
p2 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, run,b) %>%
summarize(sensitivity=sum(pool_is_pos)/sum(is_true_pos)) %>%
group_by(t,b) %>%
summarize(sensitivity=mean(sensitivity)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=sensitivity, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=sensitivity, col=as.factor(b)),se=FALSE) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0.5,1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Sensitivity")+
xlab("Prevalence")
p3 <- all_res_res %>% filter(is_pos == TRUE) %>%
group_by(t, b) %>%
summarize(vl=median(log_vl),
lower=quantile(log_vl, 0.025),
upper=quantile(log_vl, 0.975)) %>%
left_join(pA_dat2) %>%
filter(prev < 0.1) %>%
ggplot() +
geom_point(aes(x=prev,y=vl, col=as.factor(b)),size=0.05) +
geom_smooth(aes(x=prev,y=vl, col=as.factor(b)),se=FALSE) +
geom_smooth(aes(x=prev,y=lower, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
geom_smooth(aes(x=prev,y=upper, col=as.factor(b)),se=FALSE,linetype="dashed",size=0.25) +
facet_wrap(~growth, ncol=1) +
scale_y_continuous(limits=c(0,10),breaks=seq(0,10,by=1)) +
theme_bw() +
theme(legend.position="bottom") +
ylab("Viral load (median and 95% quantiles)")+
xlab("Prevalence")
main_p <- (p1 | p2  | p3)
main_p
main_p
ggsave("~/Documents/GitHub/covid19-group-tests/madrid/compare_pools_noise_sputum.png",width=8,height=5)
plot(simulated_data$obs[1,])
plot(simulated_data$obs[2,])
plot(simulated_data$obs[3,])
plot(simulated_data$obs[4,])
n_samps <- 100
source('~/Documents/GitHub/covid19-group-tests/madrid/for_carlos.R', echo=TRUE)
simulated_data$obs
main_p
