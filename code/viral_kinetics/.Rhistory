4000/30000
rpois(1000, 5.5)
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
quantile(rpois(1000, 5.5),c(0.025,0.5,0.975))
library(tidyverse)
library(ggplot2)
library(deSolve)
library(ggpubr)
## devtools::install_github("jameshay218/lazymcmc")
library(lazymcmc)
source("simulation_functions.R")
source("model_funcs.R")
setwd("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics")
## devtools::install_github("jameshay218/lazymcmc")
library(lazymcmc)
source("simulation_functions.R")
source("model_funcs.R")
set.seed(0)
## Entire popuation size (this is MA in 2018 from US Census Bureau)
population_n <- 6900000
## Sample size
n <- 500000
## Duration of epidemic in days
times <- 0:365
## Viral kinetics pars
## Change wd to local path
parTab <- read.csv("pars/partab.csv",stringsAsFactors=FALSE)
chains <- load_mcmc_chains("~/Documents/GitHub/covid19-group-tests/chains", parTab, FALSE, 1, burnin=200000,multi=TRUE)
chain <- as.data.frame(chains[[2]])
pars <- list(viral_peak_mean=mean(chain$viral_peak_mean), viral_peak_sd=mean(chain$viral_peak_sd),
wane_mean=mean(chain$wane_mean), wane_sd=mean(chain$wane_sd),
tp_last_day=7)
## Simulate the epidemic process
#epidemic_process <- simulate_epidemic_process(population_n,0.1,times)
#epidemic_process$plot
seir_pars <- c("R0"=2.2,"gamma"=1/7,"sigma"=1/6.4,"I0"=100,"recovered0"=69000000*0.1)
epidemic_process <- simulate_seir_process(population_n,seir_pars,times)
epidemic_process$plot
## Simulate infection times
infection_times <- simulate_infection_times(n, epidemic_process$overall_prob_infection,
epidemic_process$incidence)
## Simulate symptom onset times using default incubation period distribution
onset_times <- simulate_symptom_onsets(infection_times)
