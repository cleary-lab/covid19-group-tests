## Early phase
dat <- read_csv(file = "summary.resource_t0-40_t1-90.csv")
dat$`Average samples tested per day` <- floor(dat$`Design samples`*dat$`Design runs per day`)
dat <- dat %>%
mutate(version = ifelse(`Design sample split`== 1,
ifelse(`Design pools` == 1, "Simple", "Individual"),
"Combinatorial"))
dat1 <- dat
dat$`Test budget` <- as.factor(dat$`Test budget`)
dat$`Sample budget` <- as.factor(dat$`Sample budget`)
dat$label <- paste0("N:",dat$`Design samples`,", ",
"b:",dat$`Design pools`,", ",
"q:",dat$`Design sample split`,"\n",
#"Runs: ", round(dat$`Design runs per day`, 1))
"Tested: ", floor(dat$`Design runs per day` * dat$`Design samples`))
dat <- dat %>% mutate(label1 = ifelse(version =="Combinatorial", label,
ifelse(version == "Simple", paste0("Tested: ",
floor(dat$`Design runs per day` * dat$`Design samples`)),NA)))
#dat <- dat %>% mutate(`Design effectiveness` = ifelse(version == "Combinatorial", `Design effectiveness`, NA))
indiv_test_boundary <- dat %>%
filter((version == "Individual" & `Test budget` == `Design samples`)) %>%
mutate(i=n())
simple_pool_boundary <- dat %>%
filter(version == "Simple") %>%
filter(`Design samples` == 8 & as.numeric(`Sample budget`) > 3)
simple_pool_boundary$title <- "Design maximizing positive sputum sample identification for prevalence range 0.03%-2.46%"
dat <- dat %>% mutate(version = ifelse(version == "Simple", paste0("Simple pools of ", `Design samples`), version))
dat <- dat %>% group_by(`Test budget`) %>% mutate(label1=ifelse(label1==lag(label1, 1) & version == "Combinatorial", NA,label1))
dat$version <- factor(dat$version, levels=c("Individual","Simple pools of 4",
"Simple pools of 8", "Simple pools of 16",
"Combinatorial"))
dat$title  <- "Design maximizing positive sputum sample identification for prevalence range 0.03%-2.46%"
## Late phase
dat_later <- read_csv(file = "summary.resource_t0-80_t1-108.csv")
dat_later$`Average samples tested per day` <- floor(dat_later$`Design samples`*dat_later$`Design runs per day`)
dat_later <- dat_later %>%
mutate(version = ifelse(`Design sample split`== 1,
ifelse(`Design pools` == 1, "Simple", "Individual"),
"Combinatorial"))
dat_later1 <- dat_later
dat_later$`Test budget` <- as.factor(dat_later$`Test budget`)
dat_later$`Sample budget` <- as.factor(dat_later$`Sample budget`)
dat_later$label <- paste0("N:",dat_later$`Design samples`,", ",
"b:",dat_later$`Design pools`,", ",
"q:",dat_later$`Design sample split`,"\n",
#"Runs: ", round(dat_later$`Design runs per day`, 1))
"Tested: ", floor(dat_later$`Design runs per day` * dat_later$`Design samples`))
dat_later <- dat_later %>% mutate(label1 = ifelse(version =="Combinatorial", label,
ifelse(version == "Simple", paste0("Tested: ",
floor(dat_later$`Design runs per day` * dat_later$`Design samples`)),NA)))
simple_pool_boundary_later <- dat_later %>%
filter(version == "Simple") %>%
filter(`Design samples` == 4 & as.numeric(`Sample budget`) > 2)
dat_later <- dat_later %>% mutate(version = ifelse(version == "Simple", paste0("Simple pools of ", `Design samples`), version))
dat_later <- dat_later %>% group_by(`Test budget`) %>% mutate(label1=ifelse(label1==lag(label1, 1) & version == "Combinatorial", NA,label1))
dat_later$version <- factor(dat_later$version, levels=c("Individual","Simple pools of 4",
"Simple pools of 8", "Simple pools of 16",
"Combinatorial"))
dat_later$title  <- "Design maximizing positive sputum sample identification for prevalence range 1.03%-9.90%"
simple_pool_boundary_later$title <- "Design maximizing positive sputum sample identification for prevalence range 1.03%-9.90%"
dat_all <- bind_rows(dat, dat_later)
line_segments <- data.frame(x=4.5,xend=4.5,y=0.5,yend=2.5,
title="Design maximizing positive sputum sample identification for prevalence range 0.03%-2.46%")
line_segments_bot <- data.frame(x=3.5,xend=3.5,y=1.5,yend=2.5,
title="Design maximizing positive sputum sample identification for prevalence range 1.03%-9.90%")
line_segments_bot_horiz <- data.frame(x=3.5,xend=10.5,y=1.5,yend=1.5,
title="Design maximizing positive sputum sample identification for prevalence range 1.03%-9.90%")
p1 <- ggplot(dat_all) +
geom_tile(aes(y=`Test budget`, x=`Sample budget`,
fill=`Average samples tested per day`),col="grey90") +
geom_point(aes(y=`Test budget`, x=`Sample budget`,
shape=`version`),size=7,col="grey50",alpha=0.1) +
geom_text(aes(y=`Test budget`, x=`Sample budget`,
label=label1,col=`Average samples tested per day` > 3500),size=1.25) +
geom_step(data=indiv_test_boundary,
mapping=aes(x=`Sample budget`,y=`Test budget`,group=1),
position = position_nudge(y = 0.5,x=0.5),size=0.5, col="black") +
geom_segment(data=line_segments, aes(x=x,xend=xend,y=y,yend=yend),size=0.5,col="black") +
geom_segment(data=line_segments_bot_horiz, aes(x=x,xend=xend,y=y,yend=yend),size=0.5,col="black") +
geom_segment(data=line_segments_bot, aes(x=x,xend=xend,y=y,yend=yend),size=0.5,col="black") +
geom_segment(x=1.5,xend=1.5,y=0,yend=1.5, size=0.5, col="black") +
geom_hline(yintercept=0.5,col="black",size=0.75) +
geom_step(data=simple_pool_boundary,
mapping=aes(x=`Sample budget`,y=`Test budget`,group=1),
position = position_nudge(y = 0.5,x=0.5),size=0.5, col="black") +
geom_step(data=simple_pool_boundary_later,
mapping=aes(x=`Sample budget`,y=`Test budget`,group=1),
position = position_nudge(y = 0.5,x=0.5),size=0.5, col="black") +
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0)) +
scale_color_manual(values=c("black","white"),guide="none") +
scale_fill_continuous(low="white", high="#00468BFF",
limits=c(0,6144),
guide=guide_colorbar(direction="horizontal",
title.position = "top",
title.hjust = 0.5,
title.vjust=5,
ticks=FALSE,
title="Average number of samples tested",
barheight=0.5,barwidth=8,frame.color="grey40",
order=1),
na.value="white") +
scale_shape_manual(values=c(15,16,17,8,18),
guide=guide_legend(title=NULL,#"Testing strategy",
title.position="bottom",
title.hjust=0.5,
nrow=2,byrow=TRUE,
order=0,
override.aes = list(size=3,alpha=1))) +
guides() +
ylab("Daily test capacity") +
xlab("Daily sample collection capacity") +
theme_classic() +
theme(panel.grid=element_blank(),
legend.position="bottom",
plot.title=element_text(hjust=0.5,size=8),
axis.ticks = element_line(color="grey40"),
axis.text=element_text(size=6),
#axis.text.x=element_blank(),
#axis.ticks.x=element_blank(),
#axis.title.x=element_blank(),
axis.title=element_text(size=8),
legend.title = element_text(size=8),
legend.text = element_text(size=6),
legend.spacing.x = unit(0.1, 'pt'),
strip.background = element_blank(),
strip.text=element_text(size=8),
plot.tag = element_text(vjust=-1)) +
facet_wrap(~title,ncol=1)
p1
summary_dat <- dat1 %>%
filter(version != "Individual") %>%
mutate(version2 = ifelse(version == "Simple", paste0("Simple pools of ", `Design samples`),
"Combinatorial")) %>%
#mutate(version3 = ifelse(version2 == "Combinatorial",
#                         ifelse(`Design sample split` == 2, "Combinatorial q=2", "Combinatorial q=3 or 4"),version2)) %>%
group_by(version2) %>%
summarize(mean_effectiveness=mean(`Design effectiveness`),
min_effectiveness=min(`Design effectiveness`),
max_effectiveness=max(`Design effectiveness`)) %>%
mutate(min_effectiveness = ifelse(version2 == "Combinatorial", min_effectiveness, NA),
max_effectiveness = ifelse(version2 == "Combinatorial", max_effectiveness, NA))
summary_dat$version2 <- factor(summary_dat$version2,
#              levels=rev(c("Simple pools of 4","Simple pools of 8","Combinatorial q=2",
#                          "Combinatorial q=3 or 4")))
levels = rev(c("Simple pools of 4","Simple pools of 8","Combinatorial")))
summary_dat$`Stage of outbreak` <- "Prevalence 0.03%-2.46%"
summary_dat_later <- dat_later1 %>%
filter(version != "Individual") %>%
mutate(version2 = ifelse(version == "Simple", paste0("Simple pools of ", `Design samples`),
"Combinatorial")) %>%
#mutate(version3 = ifelse(version2 == "Combinatorial",
#                         ifelse(`Design sample split` == 2, "Combinatorial q=2", "Combinatorial q=3 or 4"),version2)) %>%
group_by(version2)  %>%
summarize(mean_effectiveness=mean(`Design effectiveness`),
min_effectiveness=min(`Design effectiveness`),
max_effectiveness=max(`Design effectiveness`)) %>%
mutate(min_effectiveness = ifelse(version2 == "Combinatorial", min_effectiveness, NA),
max_effectiveness = ifelse(version2 == "Combinatorial", max_effectiveness, NA))
summary_dat_later$version2 <-  factor(summary_dat_later$version2,
#levels=rev(c("Simple pools of 4","Simple pools of 8","Combinatorial q=2",
#             "Combinatorial q=3 or 4")))
levels = rev(c("Simple pools of 4","Simple pools of 8","Combinatorial")))
summary_dat_later$`Stage of outbreak` <- "Prevalence 1.03%-9.90%"
summary_dat_all <- bind_rows(summary_dat, summary_dat_later)
summary_dat_all$`Stage of outbreak` <- factor(summary_dat_all$`Stage of outbreak`,
levels=rev(c("Prevalence 1.03%-9.90%","Prevalence 0.03%-2.46%")))
p3 <- ggplot(summary_dat_all %>% filter(version2 != "Simple pools of 16"), aes(y=version2)) +
geom_bar(aes(x=mean_effectiveness,fill=`Stage of outbreak`),stat="identity",col="black",size=0.25,
position=position_dodge()) +
geom_errorbar(aes(xmin=min_effectiveness,xmax=max_effectiveness,group=`Stage of outbreak`),
width=0.15,position=position_dodge(.9)) +
coord_cartesian(xlim=c(1,20.5)) +
scale_x_continuous(breaks=c(1,seq(5,20.5,by=5)),expand=c(0,0)) +
scale_fill_lancet(guide = guide_legend(reverse = TRUE))+
ylab("") +
#xlab("Effectiveness relative to individual testing") +
xlab("Fold increase in positives identified \nrelative to individual testing") +
theme_classic() +
theme(axis.text=element_text(size=6),
axis.title=element_text(size=8),
plot.title=element_text(hjust=0.5,size=8),
legend.title=element_text(size=8),
legend.text=element_text(size=6),
legend.position = c(0.6,0.8),
plot.margin = margin(0,5,0,-5))
p_main <- (p1 | p3) + plot_layout(widths=c(3,1))
ggsave("figS8.png",p_main, height=7,width=8,units="in")
ggsave("figS8.pdf",p_main, height=7,width=8,units="in")
ggsave("figS8.png",p_main, height=8,width=8,units="in")
ggsave("figS8.pdf",p_main, height=8,width=8,units="in")
library(tidyverse)
library(patchwork)
library(ggsci)
setwd("~/Documents/GitHub/covid19-group-tests/code/plots/")
dat <- read_csv("summary.all_results.csv")
old_colnames <- colnames(dat)
colnames(dat) <- c("N","b","q","t","p_true","p_sample","p_mle")
dat$MSE <- (dat$p_mle - dat$p_true)^2
dat$rBias <- 100*abs(dat$p_mle - dat$p_true)/dat$p_true
dat$true_diff <- dat$p_true - dat$p_mle
dat$true_diff_pct <- abs(dat$true_diff)/dat$p_true
dat$label <- paste0(dat$N,"_",dat$b,"_",dat$q)
dat$prev_group <- cut(dat$p_true*100, c(0,0.01,0.05,0.1,0.5,1,5,10,100))
dat$sample_prev_group <- cut(dat$p_sample*100, c(0,0.01,0.05,0.1,0.5,1,5,10,100))
dat <- dat %>% filter(t < 137 & t > 20)
dat1 <- dat %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384")))
fig3 <- dat1 %>%
ggplot() +
geom_hline(aes(yintercept=1/N), linetype="dashed",col="grey50",size=0.5) +
geom_vline(aes(xintercept=1/N), linetype="dashed",col="grey50",size=0.5) +
geom_point(data=dat1,aes(x=p_true,y=p_mle),size=0.05,alpha=0.1,col="black",shape=19) +
geom_abline(slope=1,intercept=0,linetype="dashed",col="#ED0000FF",size=0.5) +
ylab("Estimated prevalence") +
xlab("Prevalence in population (per capita)") +
scale_y_log10(limits=c(5e-6,1), breaks=c(0.00001,0.0001,0.001,0.01,0.1,1),
labels=c("<0.00001",sapply(c(0.0001,0.001,0.01,0.1,1), function(x) sprintf("%g",x)))) +
scale_x_log10(limits=c(5e-6,1),breaks=c(0.00001,0.0001,0.001,0.01,0.1,1),
labels=c("0.00001",sapply(c(0.0001,0.001,0.01,0.1,1), function(x) sprintf("%g",x)))) +
facet_wrap(~label,ncol=1) +
theme_light() +
theme(axis.text.x=element_text(size=6),
axis.text.y=element_text(size=6),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
legend.title=element_text(size=8),
legend.text=element_text(size=6),
strip.text = element_text(size=8,color="white"),
strip.background = element_rect(fill="grey70",color="black"),
legend.position="bottom",
plot.tag = element_text(size=10)) +
labs(tag="A")
ggsave("fig3_scatter.png",fig3,height=2.5,width=7,units="in")
dat2 <- dat
dat2$prev_group <- cut(dat2$p_true*100, c(0,0.01,0.1,1,10,100))
dat2 <- dat2 %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true,p_sample,prev_group) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384"))) %>%
mutate(i=1:n()) %>%
pivot_longer(c(p_mle,p_true,p_sample))
label_key <- c("p_true"="Prevalence in population","p_sample"="Prevalence in sample","p_mle"="Estimated prevalence")
dat2$name <- label_key[dat2$name]
dat2$name <- factor(dat2$name, levels=label_key)
legend_label <- tibble(label=factor("N=576, b=6, n=96",levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384")),
prev_group="(0,0.01]",
text2=c("Prevalence in\npopulation","Prevalence in\nsample","Estimated\nprevalence"),
text=factor(c("Prevalence in population","Prevalence in sample","Estimated prevalence"),
levels=c("Prevalence in population","Prevalence in sample","Estimated prevalence")))
fig3b <- dat2 %>%
ggplot() +
geom_point(aes(x=name,y=value),size=0.05) +
geom_line(aes(x=name,y=value,group=i),size=0.005,col="grey50") +
geom_text(data=legend_label,aes(x=text,label=text2),y=-1,col="#AD002AFF",
size=1.5,angle=90) +
facet_grid(label~prev_group,switch="x") +
theme_light() +
ylab("Prevalence per capita (log scale)") +
xlab("Prevalence range") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text.y = element_text(size=8,color="white"),
strip.background.y = element_rect(fill="grey70",color="black"),
strip.text.x = element_text(size=6,color="black"),
strip.background.x = element_blank(),
axis.text.y=element_text(size=6),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
legend.title=element_text(size=8),
legend.text=element_text(size=6),
plot.tag = element_text(size=10)) +
scale_y_log10(limits=c(5e-6,1), breaks=c(0.00001,0.0001,0.001,0.01,0.1,1),
labels=c("<0.00001",sapply(c(0.0001,0.001,0.01,0.1,1), function(x) sprintf("%g",x)))) +
labs(tag="B")
fig3b
upper_lim <- 1.2
lower_lim <- 0.8
dat4 <- dat
dat_0.001 <- dat4 %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true,p_sample,prev_group) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384"))) %>%
mutate(i=1:n(),
group=0.00001) %>%
## Get +/- 10% of 0.001
filter(p_true < 0.00001*upper_lim & p_true > 0.00001*lower_lim)
dat_0.01 <- dat4 %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true,p_sample,prev_group) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384"))) %>%
mutate(i=1:n(),
group=0.0001) %>%
## Get +/- 10% of 0.01
filter(p_true < 0.0001*upper_lim & p_true > 0.0001*lower_lim)
dat_0.1 <- dat4 %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true,p_sample,prev_group) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384"))) %>%
mutate(i=1:n(),group=0.001) %>%
## Get +/- 10% of 0.1
filter(p_true < 0.001*upper_lim & p_true > 0.001*lower_lim)
dat_1 <- dat4 %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true,p_sample,prev_group) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384"))) %>%
mutate(i=1:n(),
group=0.01) %>%
## Get +/- 10% of 1
filter(p_true < 0.01*upper_lim & p_true > 0.01*lower_lim)
dat_10 <- dat4 %>% filter(label %in% c("576_6_96","2304_24_96","18432_48_384")) %>%
select(N, b, q, t, p_mle, label, p_true,p_sample,prev_group) %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label=factor(label,levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384"))) %>%
mutate(i=1:n(),
group=0.1) %>%
## Get +/- 10% of 1
filter(p_true < 0.1*upper_lim & p_true > 0.1*lower_lim)
dat5 <- bind_rows(dat_0.001, dat_0.01,dat_0.1,dat_1,dat_10) %>%
pivot_longer(c(p_mle, p_true, p_sample))
label_key <- c("p_true"="Prevalence in population","p_sample"="Prevalence in sample","p_mle"="Estimated prevalence")
dat5$name <- label_key[dat5$name]
dat5$name <- factor(dat5$name, levels=label_key)
legend_label <- tibble(label=factor("N=576, b=6, n=96",levels=c("N=576, b=6, n=96","N=2304, b=24, n=96","N=18432, b=48, n=384")),
group="0.0001",
text2=c("Prevalence in\npopulation","Prevalence in\nsample","Estimated\nprevalence"),
text=factor(c("Prevalence in population","Prevalence in sample","Estimated prevalence"),
levels=c("Prevalence in population","Prevalence in sample","Estimated prevalence")))
dat5$group <- sprintf("%g", dat5$group)
dat_medians <- dat5 %>% group_by(group, name, label) %>%
summarize(median_val=median(value)) %>%
mutate(i=1:n())
inaccurate_levels <- dat5 %>% filter(as.numeric(group) < 1/N) %>% select(label, group) %>% distinct()
fig3b_alt <- dat5 %>%
ggplot() +
geom_rect(data=inaccurate_levels, aes(fill="p < 1/N"), xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf, alpha=0.25) +
geom_line(aes(x=name,y=value,group=i),size=0.01,col="grey30") +
geom_line(data=dat_medians,aes(x=name,y=median_val,group=i,linetype="Median"),col="#925E9FFF",size=0.5) +
geom_point(aes(x=name,y=value,col=name),size=0.1) +
#geom_text(data=legend_label,aes(x=text,label=text2),y=-1,col="#AD002AFF",
#          size=1.5,angle=90) +
facet_grid(label~group,switch="x") +
scale_color_lancet(guide=guide_legend(title=NULL,#"Testing strategy",
override.aes = list(size=2,alpha=1),order=1)) +
scale_linetype_discrete() +
scale_fill_manual(values=c("grey70")) +
guides(linetype=guide_legend(title=NULL,order=2),fill=guide_legend(title=NULL,order=99)) +
theme_light() +
ylab("Prevalence per capita (log scale)") +
xlab("Prevalence in population (per capita)") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text.y = element_text(size=6,color="white"),
strip.background.y = element_rect(fill="grey70",color="black"),
strip.text.x = element_text(size=6,color="black"),
strip.background.x = element_blank(),
axis.text.y=element_text(size=6),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
legend.title=element_text(size=8),
legend.text=element_text(size=6),
legend.margin = margin(-5,-5,-5,-5),
legend.background = element_blank(),
legend.position="top",
plot.background = element_blank(),
plot.tag = element_text(size=10)) +
scale_y_log10(limits=c(5e-6,1), breaks=c(0.00001,0.0001,0.001,0.01,0.1,1),
labels=c("<0.00001",sapply(c(0.0001,0.001,0.01,0.1,1), function(x) sprintf("%g",x)))) +
labs(tag="B")
fig3b_alt
fig3_overall <- (fig3 | wrap_elements(full = fig3b_alt, clip = FALSE)) +plot_layout(widths=c(1,3.5))
ggsave("Fig3.png",fig3_overall,height=4.5,width=8,units="in")
ggsave("Fig3.pdf",fig3_overall,height=4.5,width=8,units="in")
dat %>%
group_by(N) %>% filter(b == min(b)) %>% select(N, b, q) %>% distinct() %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>% pull(label) -> labels
dput(labels)
labels <- labels[c(1,6,2,7,5,3,4)]
figS3 <- dat %>%
group_by(N) %>% filter(b == min(b)) %>%
ungroup() %>%
mutate(label = paste0("N=",N,", b=",b,", n=",q)) %>%
mutate(label = factor(label, levels=labels)) %>%
select(N,b,q,p_mle,p_sample,p_true,label) %>%
rename(`Prevalence in population` = p_true,
`Prevalence in sample` = p_sample) %>%
pivot_longer(c(`Prevalence in population`, `Prevalence in sample`)) %>%
ggplot() +
geom_hline(aes(yintercept=1/N), linetype="dashed",col="grey50",size=0.5) +
geom_vline(aes(xintercept=1/N), linetype="dashed",col="grey50",size=0.5) +
geom_point(aes(x=value,y=p_mle),size=0.05,alpha=0.1,col="black",shape=19) +
geom_abline(slope=1,intercept=0,linetype="dashed",col="#ED0000FF",size=0.5) +
ylab("Estimated prevalence") +
xlab("Target prevalence") +
scale_y_log10(limits=c(5e-6,1), breaks=c(0.00001,0.0001,0.001,0.01,0.1,1),
labels=c("<0.00001",sapply(c(0.0001,0.001,0.01,0.1,1), function(x) sprintf("%g",x)))) +
scale_x_log10(limits=c(5e-6,1),breaks=c(0.00001,0.0001,0.001,0.01,0.1,1),
labels=c("0.00001",sapply(c(0.0001,0.001,0.01,0.1,1), function(x) sprintf("%g",x)))) +
facet_grid(label~name) +
theme_light() +
theme(axis.text.x=element_text(size=6),
axis.text.y=element_text(size=6),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
legend.title=element_text(size=8),
legend.text=element_text(size=6),
strip.text = element_text(size=6,color="white"),
strip.background = element_rect(fill="grey70",color="black"),
legend.position="bottom")
figS3
ggsave("FigS5.png",figS3,height=8,width=6,units="in")
ggsave("FigS5.pdf",figS3,height=8,width=6,units="in")
labels1 <- paste0("N=",unique(dat$N))
figS4 <- dat %>% mutate(sample_diff = (p_sample - p_true)/p_true) %>%
group_by(N) %>% filter(b == min(b)) %>%
ungroup() %>%
group_by(label, N, b, q, p_true) %>%
summarize(mean_sample_err = mean(sample_diff),
sd_sample_err = sd(sample_diff)) %>%
mutate(upper=mean_sample_err + sd_sample_err,
lower=mean_sample_err - sd_sample_err) %>%
mutate(label=factor(paste0("N=",N), levels=labels1)) %>%
ggplot() +
geom_ribbon(aes(x=p_true,ymin=lower,ymax=upper),alpha=0.25) +
geom_line(aes(x=p_true,y=mean_sample_err)) +
geom_vline(aes(xintercept=1/N),linetype="dashed") +
scale_x_log10() +
xlab("Prevalence in population") +
ylab("Relative difference between prevalence in sample and population") +
theme_light() +
scale_y_continuous(limits=c(-10,10)) +
facet_wrap(~label)+
theme(axis.text.x=element_text(size=6),
axis.text.y=element_text(size=6),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
legend.title=element_text(size=8),
legend.text=element_text(size=6),
strip.text = element_text(size=6,color="white"),
strip.background = element_rect(fill="grey70",color="black"),
legend.position="bottom")
figS4
source('~/Documents/GitHub/covid19-group-tests/code/plots/fig3/fig3_final.R', echo=TRUE)
??dlkjcorr
mean(rlnorm(10000,1.621,0.418))
mean(rlnorm(100000,1.621,0.418))
mean(rlnorm(1000000,1.621,0.418))
quantile(rlnorm(1000000,1.621,0.418),c(0.025,0.975))
quantile(rlnorm(10000000,1.621,0.418),c(0.025,0.975))
source('~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/fitting_scripts/mcmc_summaries.R', echo=TRUE)
library(tidyverse)
library(data.table)
library(coda)
library(ggpubr)
library(patchwork)
library(lazymcmc)
setwd("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/")
## Viral kinetics pars
## Change wd to local path
parTab <- read.csv("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/pars/partab_multivariate_hinge.csv",stringsAsFactors=FALSE)
chains <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_swab"), parTab,
FALSE, 100, burnin=1000000,multi=TRUE)
mcmc_summary <- summary(chains[[1]])
get_summary_metric <- function(mcmc_sum,par_name){
par_mean <- mcmc_sum$statistics[which(rownames(mcmc_sum$statistics) == par_name),"Mean"]
par_lower <- mcmc_sum$quantiles[which(rownames(mcmc_sum$quantiles) == par_name),"2.5%"]
par_median <- mcmc_sum$quantiles[which(rownames(mcmc_sum$quantiles) == par_name),"50%"]
par_upper <- mcmc_sum$quantiles[which(rownames(mcmc_sum$quantiles) == par_name),"97.5%"]
paste0(signif(par_median,3)," (", signif(par_lower,3), "-",signif(par_upper,3),")")
}
get_summary_metric(mcmc_summary,"viral_peak_mean")
get_summary_metric(mcmc_summary,"viral_peak_sd")
get_summary_metric(mcmc_summary,"wane_mean")
get_summary_metric(mcmc_summary,"wane_sd")
get_summary_metric(mcmc_summary,"rho_viral_wane")
mcmc_summary
get_summary_metric(mcmc_summary,"sd")
library(tidyverse)
library(data.table)
library(coda)
library(ggpubr)
library(patchwork)
library(lazymcmc)
setwd("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/")
## Viral kinetics pars
## Change wd to local path
parTab <- read.csv("~/Documents/GitHub/covid19-group-tests/code/viral_kinetics/pars/partab_multivariate_hinge.csv",stringsAsFactors=FALSE)
chains <- load_mcmc_chains(paste0("~/Google Drive/nCoV/pool_samples/chains_sputum"), parTab,
FALSE, 100, burnin=1000000,multi=TRUE)
mcmc_summary <- summary(chains[[1]])
get_summary_metric <- function(mcmc_sum,par_name){
par_mean <- mcmc_sum$statistics[which(rownames(mcmc_sum$statistics) == par_name),"Mean"]
par_lower <- mcmc_sum$quantiles[which(rownames(mcmc_sum$quantiles) == par_name),"2.5%"]
par_median <- mcmc_sum$quantiles[which(rownames(mcmc_sum$quantiles) == par_name),"50%"]
par_upper <- mcmc_sum$quantiles[which(rownames(mcmc_sum$quantiles) == par_name),"97.5%"]
paste0(signif(par_median,3)," (", signif(par_lower,3), "-",signif(par_upper,3),")")
}
get_summary_metric(mcmc_summary,"viral_peak_mean")
get_summary_metric(mcmc_summary,"viral_peak_sd")
get_summary_metric(mcmc_summary,"wane_mean")
get_summary_metric(mcmc_summary,"wane_sd")
get_summary_metric(mcmc_summary,"rho_viral_wane")
get_summary_metric(mcmc_summary,"sd")
library(ggplot2)
library(tidyverse)
library(patchwork)
library(ggsci)
setwd("~/Documents/GitHub/covid19-group-tests/code/plots/fig4/")
dat_later <- read_csv(file = "summary.resource_t0-80_t1-108.csv")
max(dat_later$`Design effectiveness`)
